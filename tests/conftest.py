import pytest
from fastapi.testclient import TestClient
import os

# --- 1. Настройка тестового окружения ---

# Устанавливаем переменную окружения, чтобы приложение "знало",
# что оно запущено в режиме тестирования. Это позволит нам в будущем
# подменять, например, настоящую БД на тестовую.
os.environ['TESTING'] = 'True'

# ВАЖНО: Импортируем `app` из main.py ПОСЛЕ установки переменной окружения.
from main import app

# --- 2. Создаем наши "помощники" (фикстуры) ---

@pytest.fixture(scope='module')
def client():
    """
    Эта фикстура создает "виртуальный Postman" (TestClient) для нашего приложения.
    Она будет выполняться один раз для каждого тестового файла.
    """
    # Контекстный менеджер `with` гарантирует, что все "включения" и "выключения"
    # нашего приложения (lifespan) будут корректно вызваны. 
    with TestClient(app) as test_client:
        # `yield` передает управление тесту, который запросил этого "помощника".
        yield test_client

        # Код после `yield` выполнится после того, как все тесты в файле завершатся.
        # Здесь можно было бы, например, очищать тестовые данные.

# В будущем мы будем добавлять сюда другие фикстуры, 
# например, для создания тестового пользователя в базе данных.